package com.cos.person.web;

import java.util.List;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.cos.person.domain.User;
import com.cos.person.domain.UserRepository;

@RestController
public class UserController { // 사용자 요청마다
	
	private final UserRepository userRepository;
	
	///DI = 의존성 주입
	public UserController(UserRepository userRepository) {
		this.userRepository=userRepository;
	}

	// http://localhost:8080/user
	@GetMapping("/user")
	public List<User> findAll() {
//		UserRepository userRepository = new UserRepository();
//		userRepository.findAll();
		System.out.println("findAll()");
		return userRepository.findAll();	//MessageConverter ( JavaObject -> Json String) 
	}
	
	//http://localhost:8080/user/1
	@GetMapping("/user/{id}")		//들어오는 id값에 바인딩
	public User findById(@PathVariable int id) {	//주소에 값을 바인딩(int)로 받는다.
		System.out.println("findById() : id :"+id);
		return userRepository.findById(id);
	}
	
	// http://localhost:8080/user
	@PostMapping("/user")			//http메서드가 다름 POST방식
	//x-www-form-urlencoded => request.getParameter
	//text/plain = > RequestBody 어노테이션
	
	// application/json => ResponseBody 어노테이션 + 오브젝트로 받기
	public String save(@RequestBody User user) {
		System.out.println("save()");
		System.out.println("User :"+user);
		userRepository.save(user);

		return "ok";
	}
	
	// http://localhost:8080/user/2
	@DeleteMapping("/user/{id}")
	public void delete(@PathVariable int id) {	//주소에 값을 바인딩(int)로 받는다.
		System.out.println("delete()");
	}
	
	// http://localhost:8080/user/2
	@PutMapping("/user/{id}")
public void update(@PathVariable int id,String password, String phone) {	//주소에 값을 바인딩(int)로 받는다.
		System.out.println("update()");
	}
}
